#include "main.h"
#include <stdarg.h>
#include <unistd.h>
#include <stdio.h>

/**
 * _printf - produces output according to a format
 * @format: format.
 * Return: Printed chars.
 */

int _printf(const char *format, ...)
{
	va_list aaa;
	int (*b)(va_list);
	unsigned int c, print_value;

	if (format == NULL)
		return (-1);
	va_start(aaa, format);
	for(c = 0; format[c]; c++)
	{
		while (format[c] != '%' && format[c])
		{
			_putchar(format[c]);
			print_value++;
		}
		if (format[c] == '\0')
			return (print_value);
		b = find_function(&format[c + 1]);
		if (b != NULL)
		{
			print_value += f(aaa);
			c += 2;
			continue;
		}
		if (!format[c + 1])
			return (-1);
		_putchar(format[c]);
		print_value++;
		if (format[c + 1] == '%')
			c += 2;
		else
			c++;
	}
	va_end(aaa);
	return (print_value);
}
/**
  * find_format - finds formats
  * @format: char, decimal, int, string formats
  * Return: formats
  */
int (*find_format(const char *format))(va_list)
{
	unsigned int a;
	code_f find_f[] = {
		{"b", print_bin},
		{"c", print_char},
		{"d", print_dec},
		{"i", print_int},
		{"r", print_rev},
		{"R", print_rot13},
		{"s", print_string},
		{"u", print_unsig},
		{"o", print_octal},
		{"x", print_x},
		{"X", print_X},
		{NULL, NULL}
	};

	for(a = 0; find_f[a].sc; a++)
	{
		if (find_f[a].sc[0] == (*format))
			return (find_f[a].f);
	}
	return (NULL);
}
